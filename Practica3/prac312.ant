--------------------------------------------------------------------------------
-- Copyright (c) 1995-2003 Xilinx, Inc.
-- All Right Reserved.
--------------------------------------------------------------------------------
--   ____  ____ 
--  /   /\/   / 
-- /___/  \  /    Vendor: Xilinx 
-- \   \   \/     Version : 8.2i
--  \   \         Application : ISE
--  /   /         Filename : prac312.ant
-- /___/   /\     Timestamp : Mon Mar 05 03:29:52 2018
-- \   \  /  \ 
--  \___\/\___\ 
--
--Command: 
--Design Name: prac312
--Device: Xilinx
--

library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
use IEEE.STD_LOGIC_ARITH.ALL;
use IEEE.STD_LOGIC_UNSIGNED.ALL;
USE IEEE.STD_LOGIC_TEXTIO.ALL;
USE STD.TEXTIO.ALL;

ENTITY prac312 IS
END prac312;

ARCHITECTURE testbench_arch OF prac312 IS
    FILE RESULTS: TEXT OPEN WRITE_MODE IS "C:\Users\Alumno\DDM\prac3\prac312.ano";

    COMPONENT prac3
        PORT (
            A : In std_logic;
            B : In std_logic;
            C : In std_logic;
            F5 : Out std_logic;
            F4 : Out std_logic;
            F3 : Out std_logic;
            F2 : Out std_logic;
            F1 : Out std_logic;
            F0 : Out std_logic
        );
    END COMPONENT;

    SIGNAL A : std_logic := '0';
    SIGNAL B : std_logic := '0';
    SIGNAL C : std_logic := '0';
    SIGNAL F5 : std_logic := '0';
    SIGNAL F4 : std_logic := '0';
    SIGNAL F3 : std_logic := '0';
    SIGNAL F2 : std_logic := '0';
    SIGNAL F1 : std_logic := '0';
    SIGNAL F0 : std_logic := '0';

    SHARED VARIABLE TX_ERROR : INTEGER := 0;
    SHARED VARIABLE TX_OUT : LINE;

    BEGIN
        UUT : prac3
        PORT MAP (
            A => A,
            B => B,
            C => C,
            F5 => F5,
            F4 => F4,
            F3 => F3,
            F2 => F2,
            F1 => F1,
            F0 => F0
        );

        PROCESS    -- Annotation process
            VARIABLE TX_TIME : INTEGER := 0;

            PROCEDURE ANNOTATE_F5(
                TX_TIME : INTEGER
            ) IS
                VARIABLE TX_STR : String(1 to 4096);
                VARIABLE TX_LOC : LINE;
            BEGIN
                STD.TEXTIO.write(TX_LOC, string'("Annotate["));
                STD.TEXTIO.write(TX_LOC, TX_TIME);
                STD.TEXTIO.write(TX_LOC, string'(", F5, "));
                IEEE.STD_LOGIC_TEXTIO.write(TX_LOC, F5);
                STD.TEXTIO.write(TX_LOC, string'("]"));
                TX_STR(TX_LOC.all'range) := TX_LOC.all;
                STD.TEXTIO.writeline(RESULTS, TX_LOC);
                STD.TEXTIO.Deallocate(TX_LOC);
            END;
            PROCEDURE ANNOTATE_F4(
                TX_TIME : INTEGER
            ) IS
                VARIABLE TX_STR : String(1 to 4096);
                VARIABLE TX_LOC : LINE;
            BEGIN
                STD.TEXTIO.write(TX_LOC, string'("Annotate["));
                STD.TEXTIO.write(TX_LOC, TX_TIME);
                STD.TEXTIO.write(TX_LOC, string'(", F4, "));
                IEEE.STD_LOGIC_TEXTIO.write(TX_LOC, F4);
                STD.TEXTIO.write(TX_LOC, string'("]"));
                TX_STR(TX_LOC.all'range) := TX_LOC.all;
                STD.TEXTIO.writeline(RESULTS, TX_LOC);
                STD.TEXTIO.Deallocate(TX_LOC);
            END;
            PROCEDURE ANNOTATE_F3(
                TX_TIME : INTEGER
            ) IS
                VARIABLE TX_STR : String(1 to 4096);
                VARIABLE TX_LOC : LINE;
            BEGIN
                STD.TEXTIO.write(TX_LOC, string'("Annotate["));
                STD.TEXTIO.write(TX_LOC, TX_TIME);
                STD.TEXTIO.write(TX_LOC, string'(", F3, "));
                IEEE.STD_LOGIC_TEXTIO.write(TX_LOC, F3);
                STD.TEXTIO.write(TX_LOC, string'("]"));
                TX_STR(TX_LOC.all'range) := TX_LOC.all;
                STD.TEXTIO.writeline(RESULTS, TX_LOC);
                STD.TEXTIO.Deallocate(TX_LOC);
            END;
            PROCEDURE ANNOTATE_F2(
                TX_TIME : INTEGER
            ) IS
                VARIABLE TX_STR : String(1 to 4096);
                VARIABLE TX_LOC : LINE;
            BEGIN
                STD.TEXTIO.write(TX_LOC, string'("Annotate["));
                STD.TEXTIO.write(TX_LOC, TX_TIME);
                STD.TEXTIO.write(TX_LOC, string'(", F2, "));
                IEEE.STD_LOGIC_TEXTIO.write(TX_LOC, F2);
                STD.TEXTIO.write(TX_LOC, string'("]"));
                TX_STR(TX_LOC.all'range) := TX_LOC.all;
                STD.TEXTIO.writeline(RESULTS, TX_LOC);
                STD.TEXTIO.Deallocate(TX_LOC);
            END;
            PROCEDURE ANNOTATE_F1(
                TX_TIME : INTEGER
            ) IS
                VARIABLE TX_STR : String(1 to 4096);
                VARIABLE TX_LOC : LINE;
            BEGIN
                STD.TEXTIO.write(TX_LOC, string'("Annotate["));
                STD.TEXTIO.write(TX_LOC, TX_TIME);
                STD.TEXTIO.write(TX_LOC, string'(", F1, "));
                IEEE.STD_LOGIC_TEXTIO.write(TX_LOC, F1);
                STD.TEXTIO.write(TX_LOC, string'("]"));
                TX_STR(TX_LOC.all'range) := TX_LOC.all;
                STD.TEXTIO.writeline(RESULTS, TX_LOC);
                STD.TEXTIO.Deallocate(TX_LOC);
            END;
            PROCEDURE ANNOTATE_F0(
                TX_TIME : INTEGER
            ) IS
                VARIABLE TX_STR : String(1 to 4096);
                VARIABLE TX_LOC : LINE;
            BEGIN
                STD.TEXTIO.write(TX_LOC, string'("Annotate["));
                STD.TEXTIO.write(TX_LOC, TX_TIME);
                STD.TEXTIO.write(TX_LOC, string'(", F0, "));
                IEEE.STD_LOGIC_TEXTIO.write(TX_LOC, F0);
                STD.TEXTIO.write(TX_LOC, string'("]"));
                TX_STR(TX_LOC.all'range) := TX_LOC.all;
                STD.TEXTIO.writeline(RESULTS, TX_LOC);
                STD.TEXTIO.Deallocate(TX_LOC);
            END;
        BEGIN
            WAIT for 1 fs;
            ANNOTATE_F5(0);
            ANNOTATE_F4(0);
            ANNOTATE_F3(0);
            ANNOTATE_F2(0);
            ANNOTATE_F1(0);
            ANNOTATE_F0(0);
            ANNO_LOOP : LOOP
                WAIT for 50 ns;
                TX_TIME := TX_TIME + 50;
                ANNOTATE_F5(TX_TIME);
                ANNOTATE_F4(TX_TIME);
                ANNOTATE_F3(TX_TIME);
                ANNOTATE_F2(TX_TIME);
                ANNOTATE_F1(TX_TIME);
                ANNOTATE_F0(TX_TIME);
                WAIT for 50 ns;
                TX_TIME := TX_TIME + 50;
            END LOOP ANNO_LOOP;
        END PROCESS;

        PROCESS
            BEGIN
                -- -------------  Current Time:  100ns
                WAIT FOR 100 ns;
                C <= '1';
                -- -------------------------------------
                -- -------------  Current Time:  200ns
                WAIT FOR 100 ns;
                B <= '1';
                C <= '0';
                -- -------------------------------------
                -- -------------  Current Time:  300ns
                WAIT FOR 100 ns;
                C <= '1';
                -- -------------------------------------
                -- -------------  Current Time:  400ns
                WAIT FOR 100 ns;
                A <= '1';
                B <= '0';
                C <= '0';
                -- -------------------------------------
                -- -------------  Current Time:  500ns
                WAIT FOR 100 ns;
                C <= '1';
                -- -------------------------------------
                -- -------------  Current Time:  600ns
                WAIT FOR 100 ns;
                B <= '1';
                C <= '0';
                -- -------------------------------------
                -- -------------  Current Time:  700ns
                WAIT FOR 100 ns;
                C <= '1';
                -- -------------------------------------
                -- -------------  Current Time:  800ns
                WAIT FOR 100 ns;
                A <= '0';
                B <= '0';
                -- -------------------------------------
                -- -------------  Current Time:  1000ns
                WAIT FOR 200 ns;
                B <= '1';
                -- -------------------------------------
                -- -------------  Current Time:  1200ns
                WAIT FOR 200 ns;
                A <= '1';
                B <= '0';
                -- -------------------------------------
                -- -------------  Current Time:  1400ns
                WAIT FOR 200 ns;
                B <= '1';
                -- -------------------------------------
                -- -------------  Current Time:  1600ns
                WAIT FOR 200 ns;
                A <= '0';
                -- -------------------------------------
                -- -------------  Current Time:  2000ns
                WAIT FOR 400 ns;
                A <= '1';
                -- -------------------------------------
                -- -------------  Current Time:  2400ns
                WAIT FOR 400 ns;
                A <= '0';
                -- -------------------------------------
                -- -------------  Current Time:  2800ns
                WAIT FOR 400 ns;
                A <= '1';
                WAIT FOR 7200 ns;

                STD.TEXTIO.write(TX_OUT, string'("Total[]"));
                STD.TEXTIO.writeline(RESULTS, TX_OUT);
                ASSERT (FALSE) REPORT
                    "Success! Simulation for annotation completed"
                    SEVERITY FAILURE;
            END PROCESS;

    END testbench_arch;

